/**
* User account and session management
* Provides HTTP endpoints to manage User Accounts and User Sessions.
*
* The version of the OpenAPI document: latest
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.equisoft.accountservice.sdk.models

import com.equisoft.accountservice.sdk.models.SessionState
import com.equisoft.accountservice.sdk.models.SsoProvider
import com.equisoft.accountservice.sdk.models.User

import com.squareup.moshi.Json
/**
 * 
 * @param sessionId Globally unique identifier.
 * @param state 
 * @param created 
 * @param expire 
 * @param user 
 * @param actor 
 * @param sso 
 * @param enabledForEquisoftConnect Session is enabled for Equisoft/Connect and is accounted for concurrent access.
 * @param mobile Indicate that the session is initiated from a mobile device.
 */

data class Session (
    /* Globally unique identifier. */
    @Json(name = "sessionId")
    val sessionId: kotlin.String? = null,
    @Json(name = "state")
    val state: SessionState? = null,
    @Json(name = "created")
    val created: java.time.OffsetDateTime? = null,
    @Json(name = "expire")
    val expire: java.time.OffsetDateTime? = null,
    @Json(name = "user")
    val user: User? = null,
    @Json(name = "actor")
    val actor: User? = null,
    @Json(name = "sso")
    val sso: SsoProvider? = null,
    /* Session is enabled for Equisoft/Connect and is accounted for concurrent access. */
    @Json(name = "enabledForEquisoftConnect")
    val enabledForEquisoftConnect: kotlin.Boolean? = null,
    /* Indicate that the session is initiated from a mobile device. */
    @Json(name = "mobile")
    val mobile: kotlin.Boolean? = null
)

