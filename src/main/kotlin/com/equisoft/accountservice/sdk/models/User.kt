/**
* User account and session management
* Provides HTTP endpoints to manage User Accounts and User Sessions.
*
* The version of the OpenAPI document: 0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.equisoft.accountservice.sdk.models

import com.equisoft.accountservice.sdk.models.ServiceAccess
import com.equisoft.accountservice.sdk.models.UserAgreement
import com.equisoft.accountservice.sdk.models.UserServiceAssociation
import com.equisoft.accountservice.sdk.models.UserSsoProvider
import com.equisoft.accountservice.sdk.models.UserState

import com.squareup.moshi.Json

/**
 * 
 * @param id 
 * @param uuid 
 * @param displayName 
 * @param email 
 * @param locale 
 * @param state 
 * @param locked 
 * @param legacyRoles Legacy roles the user is member of
 * @param deletable User deletion is disabled.
 * @param billable User is accounted for billing.
 * @param agreement 
 * @param services 
 * @param servicesUsers 
 * @param authType 
 * @param mobilePhone Mobile phone used for sms password reset.
 * @param created 
 * @param ssoProvider 
 * @param ssoIdentifier 
 */

data class User (
    @Json(name = "id")
    val id: kotlin.Long,
    @Json(name = "uuid")
    val uuid: kotlin.String,
    @Json(name = "displayName")
    val displayName: kotlin.String,
    @Json(name = "email")
    val email: kotlin.String,
    @Json(name = "locale")
    val locale: kotlin.String,
    @Json(name = "state")
    val state: UserState,
    @Json(name = "locked")
    val locked: kotlin.Boolean,
    /* Legacy roles the user is member of */
    @Json(name = "legacyRoles")
    val legacyRoles: kotlin.collections.List<kotlin.String>,
    /* User deletion is disabled. */
    @Json(name = "deletable")
    val deletable: kotlin.Boolean,
    /* User is accounted for billing. */
    @Json(name = "billable")
    val billable: kotlin.Boolean,
    @Json(name = "agreement")
    val agreement: UserAgreement,
    @Json(name = "services")
    val services: kotlin.collections.List<ServiceAccess>,
    @Json(name = "servicesUsers")
    val servicesUsers: kotlin.collections.List<UserServiceAssociation>,
    @Json(name = "authType")
    val authType: kotlin.String,
    /* Mobile phone used for sms password reset. */
    @Json(name = "mobilePhone")
    val mobilePhone: kotlin.String? = null,
    @Json(name = "created")
    val created: java.time.OffsetDateTime? = null,
    @Json(name = "ssoProvider")
    val ssoProvider: UserSsoProvider? = null,
    @Json(name = "ssoIdentifier")
    val ssoIdentifier: kotlin.String? = null
)

